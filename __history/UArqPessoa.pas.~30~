unit UArqPessoa;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Data.DB,
  Vcl.Grids, Vcl.DBGrids, Data.Win.ADODB, Vcl.Mask, DateUtils;

type
  TfrmArqPessoa = class(TForm)
    gpbxCadastro: TGroupBox;
    pnlComandos: TPanel;
    btnAtualizar: TButton;
    btnNovo: TButton;
    gpbxPessoas: TGroupBox;
    dbgPessoas: TDBGrid;
    ADOQuery: TADOQuery;
    DataSource: TDataSource;
    btnEditar: TButton;
    btnExcluir: TButton;
    lblID: TLabel;
    lblNome: TLabel;
    lblDtNasc: TLabel;
    lblCPF: TLabel;
    lblTipoSanguineo: TLabel;
    lblCelular: TLabel;
    lblEmail: TLabel;
    edtID: TEdit;
    edtNome: TEdit;
    medtDtNasc: TMaskEdit;
    medtCPF: TMaskEdit;
    cbTipoSanguineo: TComboBox;
    medtCelular: TMaskEdit;
    edtEmail: TEdit;
    btnSalvar: TButton;
    btnCancelar: TButton;
    ADOQuery2: TADOQuery;
    procedure FormShow(Sender: TObject);
    procedure btnAtualizarClick(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure Atualizar;
    procedure Excluir;
    procedure dbgPessoasKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure btnNovoClick(Sender: TObject);
    procedure edtNomeKeyPress(Sender: TObject; var Key: Char);
    procedure medtDtNascKeyPress(Sender: TObject; var Key: Char);
    procedure medtCPFKeyPress(Sender: TObject; var Key: Char);
    procedure medtCelularKeyPress(Sender: TObject; var Key: Char);
    procedure edtEmailKeyPress(Sender: TObject; var Key: Char);
    procedure cbTipoSanguineoSelect(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure Salvar;
  private
    PesID, PesNome, Acao: String;
    Editado: Boolean;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmArqPessoa: TfrmArqPessoa;

implementation

uses
  UConexao, UFuncoes;

{$R *.dfm}

procedure TfrmArqPessoa.btnAtualizarClick(Sender: TObject);
begin
  Atualizar;
end;

procedure TfrmArqPessoa.Atualizar;
begin
  SQL(ADOQuery,['SELECT pes_id ID'
               ,',pes_nome AS "NOME"'
               ,',pes_datanasc AS "NASCIMENTO"'
               ,',pes_cpf AS "CPF"'
               ,',pes_celular AS "CELULAR"'
               ,',pes_email AS "EMAIL"'
               ,',pes_tiposang AS "TIPO SANGUÍNEO"'
               ,'FROM bs_pessoa']);
end;

procedure TfrmArqPessoa.Salvar;
var
  descAcao: String;
begin
  try
    if Editado then
      begin
        //verifica se o nome foi preenchido
        if Length(edtNome.Text) < 5 then
          begin
            Application.MessageBox('O nome informado é inválido'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            edtNome.SetFocus;
            Exit;
          end;
        //valida a data de nascimento
        if not ValidarData(medtDtNasc.Text) then
          begin
            Application.MessageBox('Data de nascimento inválida'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            medtDtNasc.SetFocus;
            Exit;
          end;
        //Verifica a idade - deve estar entre 18 e 60 anos
        //showmessage(IntToStr(YearsBetween(StrToDate('23/11/1986'),now)));
        if ((YearsBetween(StrToDate(medtDtNasc.Text),StrToDate(FormatDateTime('dd/mm/yyyy', Now))) < 18) or
            (YearsBetween(StrToDate(medtDtNasc.Text),StrToDate(FormatDateTime('dd/mm/yyyy', Now))) > 60)) then
          begin
            Application.MessageBox('Idade deve ser entre 18 e 60 anos'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            medtDtNasc.SetFocus;
            Exit;
          end;
        //valida o CPF
        if not ValidarCPF(medtCPF.Text) then
          begin
            Application.MessageBox('CPF inválido'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            medtCPF.SetFocus;
            Exit;
          end;
        //vefica se foi selecionado o tipo sanguíneo
        if cbTipoSanguineo.Text = EmptyStr then
          begin
            Application.MessageBox('Selecione o tipo sanguíneo'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            cbTipoSanguineo.SetFocus;
            Exit;
          end;
        //verifica se foi preenchido o número do celular
        if medtCelular.Text = '(__) _.____-____' then
          begin
            Application.MessageBox('Selecione o tipo sanguíneo'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            medtCelular.SetFocus;
            Exit;
          end;
        //valida o email
        if not ValidarEmail(edtEmail.Text) then
          begin
            Application.MessageBox('Email inválido'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            edtEmail.SetFocus;
            Exit;
          end;
        //verifica se pessoa já foi cadastrada
        SQL(ADOQuery2,['SELECT * FROM bs_pessoa'
                      ,'WHERE ((UPPER(pes_nome) = '''+UpperCase(edtNome.Text)+''''
                               ,'and pes_datanasc = '''+FormatDateTime('yyyy-mm-dd',medtDtNasc.Text)+''')']);
        if ADOQuery2.RecordCount > 0 then
          begin
            Application.MessageBox('"'++'" já está cadastrado na base de dados'
                                  ,'Aviso'
                                  ,MB_ICONEXCLAMATION + MB_OK);
            edtNome.SetFocus;
            Exit;
          end;
        if Acao = 'ADICIONAR' then
          begin
            descAcao := 'adicionado';
            SQL(ADOQuery,['INSERT INTO bs_pessoa '
                          ,'(pes_nome'
                          ,',pes_datanasc)'
                          ,',pes_cpf'
                          ,',pes_tiposang'
                          ,',pes_celular'
                          ,',pes_email)'
                          ,'VALUES ('''+edtNome.Text+''''
                                   ,','''+FormatDateTime('YYYY-mm-dd',StrToDate(medtDtNasc.Text))+''''
                                   +','''+medtCPF.Text+''''
                                   +','''+cbTipoSanguineo.Text+''''
                                   +','''+medtCelular.Text+''''
                                   +','''+edtEmail.Text+''')']);
          end
        else if Acao = 'EDITAR' then
          begin
            descAcao := 'editado';
          end;
        Atualizar;
        Acao := EmptyStr;
        Editado := False;
        PesID := EmptyStr;
        PesNome := EmptyStr;
        Application.MessageBox(PChar('Cadastro '+descAcao+'" com sucesso!')
                              ,'Informação'
                              ,MB_ICONEXCLAMATION + MB_OK);
      end;
  except on E: exception do
    begin
      if E.ClassName <> 'EAbort' then
        begin
          Application.MessageBox(PChar('Erro ao tentar salvar o cadastro')
                                ,'Erro'
                                ,MB_ICONERROR + MB_OK);
          Abort;
        end;
    end;
  end;
end;

procedure TfrmArqPessoa.Excluir;
begin
  try
    if dbgPessoas.SelectedRows.Count > 0 then
      begin
        PesNome := dbgPessoas.Columns.Items[1].Field.Text;
        PesID := dbgPessoas.Columns.Items[0].Field.Text;
        if Application.MessageBox(PChar('Deseja realmente excluir o cadastro de "'+PesNome+'"')
                                 ,'Confirmação'
                                 ,MB_ICONQUESTION + MB_YESNO) = mrYes then
          begin
            SQL(ADOQuery,['DELETE FROM bs_pessoa'
                     +'WHERE pes_id = '+PesID]);
            Atualizar;
            PesID := EmptyStr;
            PesNome := EmptyStr;
            Application.MessageBox(PChar('Cadastro de "'+PesNome+'" excluído com sucesso!')
                                  ,'Informação'
                                  ,MB_ICONEXCLAMATION + MB_OK);
          end;
      end;
  except on E: exception do
    begin
      if E.ClassName <> 'EAbort' then
        begin
          Application.MessageBox(PChar('Erro ao tentar excluir o cadastro de "'+PesNome+'"')
                                ,'Erro'
                                ,MB_ICONERROR + MB_OK);
          Abort;
        end;
    end;
  end;
end;

procedure TfrmArqPessoa.btnEditarClick(Sender: TObject);
begin
  if dbgPessoas.SelectedRows.Count > 0 then
    begin
      Acao := 'EDITAR';
    end;
end;

procedure TfrmArqPessoa.btnExcluirClick(Sender: TObject);
begin
  Excluir;
end;

procedure TfrmArqPessoa.btnNovoClick(Sender: TObject);
begin
  Acao := 'ADICIONAR';
end;

procedure TfrmArqPessoa.btnSalvarClick(Sender: TObject);
begin
  Salvar;
end;

procedure TfrmArqPessoa.cbTipoSanguineoSelect(Sender: TObject);
begin
  Editado := Enabled;
end;

procedure TfrmArqPessoa.dbgPessoasKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = VK_DELETE then
    Excluir;
end;

procedure TfrmArqPessoa.edtEmailKeyPress(Sender: TObject; var Key: Char);
begin
  Editado := Enabled;
end;

procedure TfrmArqPessoa.edtNomeKeyPress(Sender: TObject; var Key: Char);
begin
  if not (Key in (['a'..'z','A'..'Z','0'..'9'])) then
    Key := #0
  else
    Editado := Enabled;
end;

procedure TfrmArqPessoa.FormShow(Sender: TObject);
begin
  Atualizar;
  Acao := EmptyStr;
  Editado := False;
end;

procedure TfrmArqPessoa.medtCelularKeyPress(Sender: TObject; var Key: Char);
begin
  Editado := Enabled;
end;

procedure TfrmArqPessoa.medtCPFKeyPress(Sender: TObject; var Key: Char);
begin
  Editado := Enabled;
end;

procedure TfrmArqPessoa.medtDtNascKeyPress(Sender: TObject; var Key: Char);
begin
  Editado := Enabled;
end;

end.
